# Docker Compose Configuration
#
# Defines the multi-container application setup for VacationVibe
# Features:
# - Frontend (React + Nginx)
# - Backend (Node.js + Express)
# - Database (MySQL)
# - Cache (Redis)
# - Volume persistence
# - Network isolation
# - Health checks
# - Resource limits

version: '3.8'

services:
  # Frontend service: React application served by Nginx
  frontend:
    build:
      context: ..
      dockerfile: deployment/docker/frontend/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Backend service: Node.js API server
  backend:
    build:
      context: ..
      dockerfile: deployment/docker/backend/Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - .env
    environment:
      - DB_HOST=database
      - REDIS_HOST=cache
    depends_on:
      - database
      - cache
    volumes:
      - uploads:/app/uploads
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database service: MySQL
  database:
    image: mysql:8.0
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cache service: Redis
  cache:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

# Persistent volumes configuration
volumes:
  uploads:
    name: vacation-uploads
  db-data:
    name: vacation-db-data
  redis-data:
    name: vacation-redis-data

# Network configuration
networks:
  app-network:
    name: vacation-network
    driver: bridge